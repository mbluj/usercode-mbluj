/********************************************************************
* Test/MiniAnalyzer/src/MyRootDict.h
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************************/
#ifdef __CINT__
#error Test/MiniAnalyzer/src/MyRootDict.h/C is only for compilation. Abort cint.
#endif
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#define G__ANSIHEADER
#define G__DICTIONARY
#define G__PRIVATE_GVALUE
#include "G__ci.h"
#include "FastAllocString.h"
extern "C" {
extern void G__cpp_setup_tagtableMyRootDict();
extern void G__cpp_setup_inheritanceMyRootDict();
extern void G__cpp_setup_typetableMyRootDict();
extern void G__cpp_setup_memvarMyRootDict();
extern void G__cpp_setup_globalMyRootDict();
extern void G__cpp_setup_memfuncMyRootDict();
extern void G__cpp_setup_funcMyRootDict();
extern void G__set_cpp_environmentMyRootDict();
}


#include "TObject.h"
#include "TMemberInspector.h"
#include "Test/MiniAnalyzer/interface/DiTauObj.h"
#include "Test/MiniAnalyzer/interface/MuonObj.h"
#include "Test/MiniAnalyzer/interface/ParticleObj.h"
#include "Test/MiniAnalyzer/interface/TauObj.h"
#include <algorithm>
namespace std { }
using namespace std;

#ifndef G__MEMFUNCBODY
#endif

extern G__linked_taginfo G__MyRootDictLN_TClass;
extern G__linked_taginfo G__MyRootDictLN_TBuffer;
extern G__linked_taginfo G__MyRootDictLN_TMemberInspector;
extern G__linked_taginfo G__MyRootDictLN_TObject;
extern G__linked_taginfo G__MyRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR;
extern G__linked_taginfo G__MyRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__MyRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR;
extern G__linked_taginfo G__MyRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__MyRootDictLN_ParticleObj;
extern G__linked_taginfo G__MyRootDictLN_DiTauObj;
extern G__linked_taginfo G__MyRootDictLN_MuonObj;
extern G__linked_taginfo G__MyRootDictLN_TauObj;
extern G__linked_taginfo G__MyRootDictLN_vectorlEParticleObjcOallocatorlEParticleObjgRsPgR;
extern G__linked_taginfo G__MyRootDictLN_vectorlEParticleObjcOallocatorlEParticleObjgRsPgRcLcLiterator;
extern G__linked_taginfo G__MyRootDictLN_reverse_iteratorlEvectorlEParticleObjcOallocatorlEParticleObjgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__MyRootDictLN_vectorlEMuonObjcOallocatorlEMuonObjgRsPgR;
extern G__linked_taginfo G__MyRootDictLN_vectorlEMuonObjcOallocatorlEMuonObjgRsPgRcLcLiterator;
extern G__linked_taginfo G__MyRootDictLN_reverse_iteratorlEvectorlEMuonObjcOallocatorlEMuonObjgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__MyRootDictLN_vectorlETauObjcOallocatorlETauObjgRsPgR;
extern G__linked_taginfo G__MyRootDictLN_vectorlETauObjcOallocatorlETauObjgRsPgRcLcLiterator;
extern G__linked_taginfo G__MyRootDictLN_reverse_iteratorlEvectorlETauObjcOallocatorlETauObjgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__MyRootDictLN_vectorlEDiTauObjcOallocatorlEDiTauObjgRsPgR;
extern G__linked_taginfo G__MyRootDictLN_vectorlEDiTauObjcOallocatorlEDiTauObjgRsPgRcLcLiterator;
extern G__linked_taginfo G__MyRootDictLN_reverse_iteratorlEvectorlEDiTauObjcOallocatorlEDiTauObjgRsPgRcLcLiteratorgR;

/* STUB derived class for protected member access */
typedef vector<ParticleObj,allocator<ParticleObj> > G__vectorlEParticleObjcOallocatorlEParticleObjgRsPgR;
typedef vector<ParticleObj,allocator<ParticleObj> >::iterator G__vectorlEParticleObjcOallocatorlEParticleObjgRsPgRcLcLiterator;
typedef vector<MuonObj,allocator<MuonObj> > G__vectorlEMuonObjcOallocatorlEMuonObjgRsPgR;
typedef vector<MuonObj,allocator<MuonObj> >::iterator G__vectorlEMuonObjcOallocatorlEMuonObjgRsPgRcLcLiterator;
typedef vector<TauObj,allocator<TauObj> > G__vectorlETauObjcOallocatorlETauObjgRsPgR;
typedef vector<TauObj,allocator<TauObj> >::iterator G__vectorlETauObjcOallocatorlETauObjgRsPgRcLcLiterator;
typedef vector<DiTauObj,allocator<DiTauObj> > G__vectorlEDiTauObjcOallocatorlEDiTauObjgRsPgR;
typedef vector<DiTauObj,allocator<DiTauObj> >::iterator G__vectorlEDiTauObjcOallocatorlEDiTauObjgRsPgRcLcLiterator;
